/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Game, GameInterface } from "../Game";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_cryptoHerosToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_player_bet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_bot_bet",
        type: "uint256",
      },
    ],
    name: "gamePlayed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bet",
        type: "uint256",
      },
    ],
    name: "createSingleGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getUserSingleGames",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSingleGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "singleGames",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userResult",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "contractResult",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "playerBet",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "game",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "result",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usersSingleGames",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060015560006002553480156200001b57600080fd5b50604051620013333803806200133383398181016040528101906200004191906200018c565b6200006162000055620000a960201b60201c565b620000b160201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200021a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001868162000200565b92915050565b6000602082840312156200019f57600080fd5b6000620001af8482850162000175565b91505092915050565b6000620001c582620001e0565b9050919050565b6000620001d982620001b8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020b81620001cc565b81146200021757600080fd5b50565b611109806200022a6000396000f3fe6080604052600436106100865760003560e01c806374b8ea191161005957806374b8ea191461013a5780638da5cb5b1461017c57806399880b05146101a75780639f7b4beb146101e4578063f2fde38b1461021457610086565b8063264ade681461008b5780632e1a7d4d146100c85780636a28d047146100f8578063715018a614610123575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906109f9565b61023d565b6040516100bf9190610dc2565b60405180910390f35b6100e260048036038101906100dd9190610a35565b61026e565b6040516100ef9190610d27565b60405180910390f35b34801561010457600080fd5b5061010d610302565b60405161011a9190610dc2565b60405180910390f35b34801561012f57600080fd5b50610138610308565b005b34801561014657600080fd5b50610161600480360381019061015c9190610a35565b610390565b60405161017396959493929190610ca4565b60405180910390f35b34801561018857600080fd5b50610191610416565b60405161019e9190610c52565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c991906109a7565b61043f565b6040516101db9190610d05565b60405180910390f35b6101fe60048036038101906101f99190610a5e565b6104d6565b60405161020b9190610d27565b60405180910390f35b34801561022057600080fd5b5061023b600480360381019061023691906109a7565b610744565b005b6005602052816000526040600020818154811061025957600080fd5b90600052602060002001600091509150505481565b600061027861083c565b73ffffffffffffffffffffffffffffffffffffffff16610296610416565b73ffffffffffffffffffffffffffffffffffffffff16146102ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e390610d82565b60405180910390fd5b478211156102f957600080fd5b60019050919050565b60015481565b61031061083c565b73ffffffffffffffffffffffffffffffffffffffff1661032e610416565b73ffffffffffffffffffffffffffffffffffffffff1614610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b90610d82565b60405180910390fd5b61038e6000610844565b565b600481815481106103a057600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16905086565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020905b8154815260200190600101908083116104b6575b50505050509050919050565b60008082101561051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610da2565b60405180910390fd5b600282111561055f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055690610d62565b60405180910390fd5b600034101561056d57600080fd5b600047101561057b57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016105ed9190610dc2565b60206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d91906109d0565b73ffffffffffffffffffffffffffffffffffffffff161461065d57600080fd5b6000610667610908565b90506000808414801561067a5750600282145b8061069157506001841480156106905750600082145b5b806106a857506002841480156106a75750600182145b5b156106b5573390506106fd565b6000821480156106c55750600284145b806106dc57506001821480156106db5750600084145b5b806106f357506002821480156106f25750600184145b5b156106fc573090505b5b7f3290e4df65db7b71fd9ab4016ad29bdf8fc1a93936e9ae9fbab46c907638274981858460405161073093929190610c6d565b60405180910390a160019250505092915050565b61074c61083c565b73ffffffffffffffffffffffffffffffffffffffff1661076a610416565b73ffffffffffffffffffffffffffffffffffffffff16146107c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b790610d82565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790610d42565b60405180910390fd5b61083981610844565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806002423360025460405160200161092493929190610c15565b6040516020818303038152906040528051906020012060001c6109479190610ef3565b90506002600081548092919061095c90610e7c565b91905055508091505090565b600081359050610977816110a5565b92915050565b60008151905061098c816110a5565b92915050565b6000813590506109a1816110bc565b92915050565b6000602082840312156109b957600080fd5b60006109c784828501610968565b91505092915050565b6000602082840312156109e257600080fd5b60006109f08482850161097d565b91505092915050565b60008060408385031215610a0c57600080fd5b6000610a1a85828601610968565b9250506020610a2b85828601610992565b9150509250929050565b600060208284031215610a4757600080fd5b6000610a5584828501610992565b91505092915050565b60008060408385031215610a7157600080fd5b6000610a7f85828601610992565b9250506020610a9085828601610992565b9150509250929050565b6000610aa68383610bd1565b60208301905092915050565b610abb81610e27565b82525050565b610ad2610acd82610e27565b610ec5565b82525050565b6000610ae382610ded565b610aed8185610e05565b9350610af883610ddd565b8060005b83811015610b29578151610b108882610a9a565b9750610b1b83610df8565b925050600181019050610afc565b5085935050505092915050565b610b3f81610e39565b82525050565b6000610b52602683610e16565b9150610b5d82610f8f565b604082019050919050565b6000610b75602783610e16565b9150610b8082610fde565b604082019050919050565b6000610b98602083610e16565b9150610ba38261102d565b602082019050919050565b6000610bbb602683610e16565b9150610bc682611056565b604082019050919050565b610bda81610e65565b82525050565b610be981610e65565b82525050565b610c00610bfb82610e65565b610ee9565b82525050565b610c0f81610e6f565b82525050565b6000610c218286610bef565b602082019150610c318285610ac1565b601482019150610c418284610bef565b602082019150819050949350505050565b6000602082019050610c676000830184610ab2565b92915050565b6000606082019050610c826000830186610ab2565b610c8f6020830185610be0565b610c9c6040830184610be0565b949350505050565b600060c082019050610cb96000830189610ab2565b610cc66020830188610be0565b610cd36040830187610be0565b610ce06060830186610be0565b610ced6080830185610c06565b610cfa60a0830184610c06565b979650505050505050565b60006020820190508181036000830152610d1f8184610ad8565b905092915050565b6000602082019050610d3c6000830184610b36565b92915050565b60006020820190508181036000830152610d5b81610b45565b9050919050565b60006020820190508181036000830152610d7b81610b68565b9050919050565b60006020820190508181036000830152610d9b81610b8b565b9050919050565b60006020820190508181036000830152610dbb81610bae565b9050919050565b6000602082019050610dd76000830184610be0565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e3282610e45565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610e8782610e65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eba57610eb9610f24565b5b600182019050919050565b6000610ed082610ed7565b9050919050565b6000610ee282610f82565b9050919050565b6000819050919050565b6000610efe82610e65565b9150610f0983610e65565b925082610f1957610f18610f53565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f42657420746f20686967682c20706c6561736520626574206265747765656e2060008201527f3020616e64203200000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42657420746f206c6f772c20706c6561736520626574206265747765656e203060008201527f20616e6420320000000000000000000000000000000000000000000000000000602082015250565b6110ae81610e27565b81146110b957600080fd5b50565b6110c581610e65565b81146110d057600080fd5b5056fea2646970667358221220812db59a1535e8eb0472c32e911172fcedc5a089ae8c698d8f2cc2f3f0ac14f664736f6c63430008040033";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Game";
  }

  override deploy(
    _cryptoHerosToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Game> {
    return super.deploy(_cryptoHerosToken, overrides || {}) as Promise<Game>;
  }
  override getDeployTransaction(
    _cryptoHerosToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_cryptoHerosToken, overrides || {});
  }
  override attach(address: string): Game {
    return super.attach(address) as Game;
  }
  override connect(signer: Signer): Game__factory {
    return super.connect(signer) as Game__factory;
  }
  static readonly contractName: "Game";

  public readonly contractName: "Game";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new utils.Interface(_abi) as GameInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Game {
    return new Contract(address, _abi, signerOrProvider) as Game;
  }
}
